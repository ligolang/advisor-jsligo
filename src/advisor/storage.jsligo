#import "errors.jsligo" "Errors"
#import "algo.jsligo" "Algo"

export namespace Types {
    export type t = {
        indiceAddress : address,
        algorithm : Algo.Types.t,
        result : bool,
        metadata: big_map<string, bytes>
    };
};

export namespace Utils {
    export const change = (p: Algo.Types.t, s: Types.t) : Types.t => {
        return { ...s, algorithm: p}
    };

    export const executeAlgorithm = (s : Types.t) : Types.t => {
        let indiceValOpt : option<int> = Tezos.call_view("indice_value", unit, s.indiceAddress);
        let indiceVal : int = match (indiceValOpt) {
            when(None()) : (failwith(Errors.unknownView));
            when(Some(v)) : v
        };
        return { ...s, result: s.algorithm(indiceVal) }
    };
};
